server {
    listen 80;
    server_name keychanger.example.com www.keychanger.example.com;

    # HTTP 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }

    # Let's Encrypt 인증서 갱신용 경로
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
}

server {
    listen 443 ssl;
    server_name keychanger.example.com www.keychanger.example.com;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/keychanger.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/keychanger.example.com/privkey.pem;

    # SSL 설정 최적화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # HSTS 설정 (클라이언트가 항상 HTTPS를 사용하도록 함)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    
    # 기타 보안 헤더
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # 파일 업로드 크기 제한 늘리기
    client_max_body_size 100M;

    # FastAPI 애플리케이션으로 프록시
    location / {
        proxy_pass http://localhost:8000;  # FastAPI 애플리케이션은 8000 포트에서 실행
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 웹소켓 지원 (필요한 경우)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 타임아웃 설정 늘리기 (오디오 처리 시간 고려)
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
}
